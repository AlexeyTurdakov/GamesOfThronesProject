{
  "version": 3,
  "sources": [
    "components/error/error.jpg",
    "components/header/index.js",
    "components/header/header.js",
    "services/gotService.js",
    "components/spinner/index.js",
    "components/spinner/spinner.js",
    "components/error/errorMessage.js",
    "components/randomChar/randomChar.js",
    "components/randomChar/index.js",
    "components/error/index.js",
    "components/itemList/index.js",
    "components/itemList/itemList.js",
    "components/charDetails/index.js",
    "components/charDetails/charDetails.js",
    "components/app/index.js",
    "components/app/app.js",
    "index.js"
  ],
  "names": [
    "module",
    "exports",
    "__webpack_require__",
    "p",
    "Header",
    "react_default",
    "a",
    "createElement",
    "className",
    "href",
    "GotService",
    "_this",
    "this",
    "Object",
    "classCallCheck",
    "_extractId",
    "item",
    "url",
    "match",
    "_transformCharacter",
    "char",
    "id",
    "name",
    "isSet",
    "gender",
    "born",
    "died",
    "culture",
    "_transformHouse",
    "house",
    "region",
    "words",
    "titles",
    "ancestralWeapons",
    "_transformBook",
    "book",
    "numberOfPages",
    "publisher",
    "released",
    "_apiBase",
    "fetch",
    "concat",
    "res",
    "ok",
    "Error",
    "status",
    "json",
    "getResource",
    "map",
    "character",
    "data",
    "Spinner",
    "ErrorMessage",
    "Fragment",
    "src",
    "img",
    "RandomChar",
    "gotService",
    "state",
    "loading",
    "error",
    "onCharLoaded",
    "setState",
    "onError",
    "err",
    "updateChar",
    "Math",
    "floor",
    "random",
    "getCharacter",
    "then",
    "catch",
    "console",
    "log",
    "timerID",
    "setInterval",
    "clearInterval",
    "_this$state",
    "errorMessage",
    "error_errorMessage",
    "spinner",
    "components_spinner",
    "content",
    "randomChar_View",
    "Component",
    "View",
    "_ref",
    "ItemList",
    "charList",
    "_this2",
    "getAllCharacters",
    "arr",
    "_this3",
    "key",
    "onClick",
    "props",
    "onItemSelected",
    "components_error",
    "items",
    "renderItems",
    "CharDetails",
    "gotServise",
    "prevProps",
    "charId",
    "_this$state$char",
    "App",
    "showRandomChar",
    "selectedChar",
    "toggleRandomChar",
    "components_randomChar",
    "Container",
    "components_header",
    "Row",
    "Col",
    "lg",
    "size",
    "offset",
    "md",
    "components_itemList",
    "components_charDetails",
    "ReactDOM",
    "render",
    "components_app",
    "document",
    "getElementById"
  ],
  "mappings": "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",
  "file": "static/js/main.71bee3a0.chunk.js",
  "sourcesContent": [
    "module.exports = __webpack_public_path__ + \"static/media/error.22389cf4.jpg\";",
    "import Header from './header';\n\nexport default Header;",
    "import React from 'react';\nimport './header.css';\n\nconst Header = () => {\n    return (\n        <div className=\"header\">\n            <h3 className=\"header-title\">\n                <a href=\"#\">\n                Game of Thrones DB\n                </a>\n            </h3>\n            <ul className=\"header-list\">\n                <li>\n                    <a href=\"#\">Characters</a>\n                </li>\n                <li>\n                    <a href=\"#\">Houses</a>\n                </li>\n                <li>\n                    <a href=\"#\">Books</a>   \n                </li>\n            </ul>\n        </div>\n    );\n};\n\nexport default Header;",
    "\nexport default class GotService {\n    constructor() {\n        this._apiBase = 'https://www.anapioficeandfire.com/api';\n    }\n\n    async getResource(url) {\n        const res = await fetch(`${this._apiBase}${url}`);\n    \n        if (!res.ok) {\n          throw new Error(`Could not fetch ${url}` +\n            `, received ${res.status}`);\n        }\n        return await res.json();\n    }\n\n    async getAllBooks() {\n        const res = await this.getResource(`/books/`);\n        return res.map(this._transformBook);\n    }\n    \n    async getBook(id) {\n        const book = await this.getResource(`/books/${id}/`);\n        return this._transformBook(book);\n    }\n    \n    async getAllCharacters() {\n        const res = await this.getResource(`/characters?page=5&pageSize=10`);\n        return res.map(this._transformCharacter);\n    }\n    \n    async getCharacter(id) {\n        const character = await this.getResource(`/characters/${id}`);\n        return this._transformCharacter(character);\n    }\n    \n    async getAllHouses() {\n        const res = await this.getResource(`/houses/`);\n        return res.map(this._transformHouse);\n    }\n    \n    async getHouse(id) {\n        const house = this.getResource(`/houses/${id}/`);\n        return this._transformHouse(house);\n    }\n\n    isSet(data) {\n        if (data) {\n            return data\n        } else {\n            return 'no data :('\n        }\n    }    \n    \n    _extractId = (item) => {\n        const idRegExp = /\\/([0-9]*)$/;\n        return item.url.match(idRegExp)[1];\n    }\n\n    _transformCharacter = (char) => {\n        return {\n            id: this._extractId(char),\n            name: this.isSet(char.name),\n            gender: this.isSet(char.gender),\n            born: this.isSet(char.born),\n            died: this.isSet(char.died), \n            culture: this.isSet(char.culture)\n        };\n    }\n\n    _transformHouse = (house) => {\n        return {\n            id: this._extractId(house),\n            name: this.isSet(house.name),\n            region: this.isSet(house.region),\n            words: this.isSet(house.words),\n            titles: this.isSet(house.titles),\n            ancestralWeapons: this.isSet(house.ancestralWeapons)\n        };\n    }\n    \n    _transformBook = (book) => {\n        return {\n            id: this._extractId(book),\n            name: this.isSet(book.name),\n            numberOfPages: this.isSet(book.numberOfPages),\n            publisher: this.isSet(book.publisher),\n            released: this.isSet(book.released)\n        };\n    }\n}\n",
    "import Spinner from './spinner';\nexport default Spinner;",
    "import React from 'react';\nimport './spinner.css';\n\nconst Spinner = () => {\n    return (\n        <div className=\"lds-css ng-scope\">\n            <div className=\"lds-spin\"><div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div></div>\n        </div>\n    )\n}\n\nexport default Spinner;",
    "import React from 'react';\nimport img from './error.jpg';\n\nconst ErrorMessage = () => {\n    return (\n        <>\n            <img src={img}></img>\n            <span>Something goes wrong :(</span>\n        </>\n    )\n    \n}\nexport default ErrorMessage;",
    "import React, { Component } from \"react\";\nimport \"./randomChar.css\";\nimport gotService from \"../../services/gotService\";\nimport Spinner from \"../spinner/\";\nimport ErrorMessage from \"../error/errorMessage\";\n\nexport default class RandomChar extends Component {\n  gotService = new gotService();\n  state = {\n    char: {},\n    loading: true,\n    error: false,\n  };\n\n  onCharLoaded = (char) => {\n    this.setState({\n      char,\n      loading: false,\n    });\n  };\n\n  onError = (err) => {\n    this.setState({\n      error: true,\n      loading: false,\n    });\n  };\n\n  updateChar = () => {\n    const id = Math.floor(Math.random() * 140 + 25);\n    this.gotService\n      .getCharacter(id)\n      .then(this.onCharLoaded)\n      .catch(this.onError);\n  };\n\n  componentDidMount() {\n    console.log(\"did mount\");\n    this.updateChar();\n    this.timerID = setInterval(this.updateChar, 5000);\n  }\n\n  componentWillUnmount() {\n    console.log(\"will  unmount\");\n    clearInterval(this.timerID);\n  }\n\n  render() {\n    console.log(\"render\");\n    const { char, loading, error } = this.state;\n    const errorMessage = error ? <ErrorMessage /> : null;\n    const spinner = loading ? <Spinner /> : null;\n    const content = !(loading || error) ? <View char={char} /> : null;\n\n    return (\n      <div className='random-block rounded'>\n        {errorMessage}\n        {spinner}\n        {content}\n      </div>\n    );\n  }\n}\n\nconst View = ({ char }) => {\n  const { name, gender, born, died, culture } = char;\n\n  return (\n    <>\n      <h4>Random Character: {name}</h4>\n      <ul className='list-group list-group-flush'>\n        <li className='list-group-item d-flex justify-content-between'>\n          <span className='term'>Gender </span>\n          <span>{gender}</span>\n        </li>\n        <li className='list-group-item d-flex justify-content-between'>\n          <span className='term'>Born </span>\n          <span>{born}</span>\n        </li>\n        <li className='list-group-item d-flex justify-content-between'>\n          <span className='term'>Died </span>\n          <span>{died}</span>\n        </li>\n        <li className='list-group-item d-flex justify-content-between'>\n          <span className='term'>Culture </span>\n          <span>{culture}</span>\n        </li>\n      </ul>\n    </>\n  );\n};\n",
    "import RandomChar from './randomChar';\n\nexport default RandomChar;",
    "import ErrorMessage from './errorMessage';\nexport default ErrorMessage;",
    "import ItemList from './itemList';\n\nexport default ItemList;",
    "import React, {Component} from 'react';\nimport './itemList.css';\nimport gotService from '../../services/gotService';\nimport ErrorMessage from '../error';\nimport Spinner from '../spinner/';\n\n\nexport default class ItemList extends Component {\n\n    gotService = new gotService();\n\n    state = {\n        charList: null,\n        error: false\n    }\n    componentDidMount() {\n        this.gotService.getAllCharacters()\n            .then((charList) => {\n                this.setState({\n                    charList,\n                    error: false\n                });\n            })\n            .catch(() => {this.onError()});\n    }\n    componentDidCatch(){\n        this.setState({\n            charList: null,\n            error: true\n        })\n    }\n    onError(status){\n        this.setState({\n            charList: null,\n            error: true\n        })\n    }\n    renderItems(arr) {\n        return arr.map((item) => {\n            const {id, name} = item;\n            return (\n                <li\n                    key={id}\n                    className=\"list-group-item\"\n                    onClick={() => this.props.onItemSelected(id)}\n                    >\n                    {name}\n                </li>\n            )\n        })\n    }\n\n\n    render() {\n        const {charList, error} = this.state;\n\n        if(error){\n            return <ErrorMessage/>\n        }\n\n        if(!charList) {\n            return <Spinner/>\n        }\n\n        const items = this.renderItems(charList);\n\n        return (\n            <ul className=\"item-list list-group\">\n                {items}\n            </ul>\n        );\n    }\n}",
    "import CharDetails from './charDetails';\nexport default CharDetails;",
    "import React, { Component } from \"react\";\nimport GotService from \"../../services/gotService\";\nimport \"./charDetails.css\";\nexport default class CharDetails extends Component {\n  gotServise = new GotService();\n\n  state = {\n    char: null,\n  };\n\n  componentDidMount() {\n    this.updateChar();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.charId !== prevProps.charId) {\n      this.updateChar();\n    }\n  }\n\n  updateChar() {\n    const { charId } = this.props;\n    if (!charId) {\n      return;\n    }\n    this.gotServise.getCharacter(charId).then((char) => {\n      this.setState({\n        char,\n      });\n    });\n    \n  }\n\n  render() {\n    if (!this.state.char) {\n      return <span className='select-error'>Please select a character</span>;\n    }\n\n    const { name, gender, born, died, culture } = this.state.char;\n\n    return (\n      <div className='char-details rounded'>\n        <h4>{name}</h4>\n        <ul className='list-group list-group-flush'>\n          <li className='list-group-item d-flex justify-content-between'>\n            <span className='term'>Gender</span>\n            <span>{gender}</span>\n          </li>\n          <li className='list-group-item d-flex justify-content-between'>\n            <span className='term'>Born</span>\n            <span>{born}</span>\n          </li>\n          <li className='list-group-item d-flex justify-content-between'>\n            <span className='term'>Died</span>\n            <span>{died}</span>\n          </li>\n          <li className='list-group-item d-flex justify-content-between'>\n            <span className='term'>Culture</span>\n            <span>{culture}</span>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n",
    "import App from './app';\n\nexport default App;\n",
    "import React, { Component } from \"react\";\nimport { Col, Row, Container } from \"reactstrap\";\nimport Header from \"../header\";\nimport RandomChar from \"../randomChar\";\nimport ItemList from \"../itemList\";\nimport CharDetails from \"../charDetails\";\nimport ErrorMessage from \"../error\";\n\nimport \"./app.css\";\n\nexport default class App extends Component {\n  state = {\n    showRandomChar: true,\n    error: false,\n    selectedChar: 130,\n  };\n  toggleRandomChar = () => {\n    this.setState((state) => {\n      return {\n        showRandomChar: !state.showRandomChar,\n      };\n    });\n  };\n\n  onItemSelected = (id) => {\n    this.setState({\n      selectedChar: id,\n    });\n  };\n\n  render() {\n    if (this.state.error) {\n      return <ErrorMessage />;\n    }\n    const char = this.state.showRandomChar ? <RandomChar /> : null;\n    return (\n      <>\n        <Container>\n          <Header />\n        </Container>\n        <Container>\n          <Row>\n            <Col lg={{ size: 5, offset: 0 }}>\n              {char}\n              <button className='toggle-btn' onClick={this.toggleRandomChar}>\n                Toggle random character\n              </button>\n            </Col>\n          </Row>\n          <Row>\n            <Col md='6'>\n              <ItemList onItemSelected={this.onItemSelected} />\n            </Col>\n            <Col md='6'>\n              <CharDetails charId={this.state.selectedChar} />\n            </Col>\n          </Row>\n        </Container>\n      </>\n    );\n  }\n}\n",
    "import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));"
  ],
  "sourceRoot": ""
}